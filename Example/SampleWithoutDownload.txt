Visualforce Page:

<apex:page controller="LightningLogicController">
     <style>
        table{
            min-width:50%;
        }
        
        #btnNew{
            background-color:red;
            border-radius:5px;
            color:white;
            text-decoration:none;
            font-weight:bold;
            padding:7px;
            margin:7px 0 7px 0;
            display:block;
            width:200px;
            text-align:center;
        }
        
        #btnNew:hover, #btnHome:hover, .btnX:hover, btnY:hover{
            opacity:0.5;
        }
        
        #btnHome{
            background-color:green;
            border-radius:5px;
            color:white;
            text-decoration:none;
            font-weight:bold;
            padding:7px;
            margin:7px 0 7px 0;
            display:block;
            width:200px;
            text-align:center;
        }
        
        .btnX{
            text-decoration:none!important;
            background-color:blue!important;
            color:white!important;
            font-weight:bold;
            display:inline-block;
            padding:3px;
            border:1px solid blue;
            border-radius:2px;
        }
        
        .btnY{
            text-decoration:none!important;
            background-color:white!important;
            color:blue!important;
            font-weight:bold;
            display:inline-block;
            padding:3px;
            border:1px solid blue;
            border-radius:2px;
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <h1>
        List of Accounts
    </h1>
    <br/>
    <a href="/001/e?acc2=Pre-Populated Account Name" target="_blank" class="classicOnly" id="btnNew">New Pre-Populated Account</a>
    <a href="#" data-id="home" data-object="Task" target="_blank" class="notClassic editLink" id="btnHome">Task Home Page</a>
    <table>
        <tr>
            <th>Name</th>
            <th>Actions</th>
        </tr>       
        <apex:repeat value="{!liAcc}" var="a">
            <tr>
                <td>{!a.Name}</td>
                <td>
                    <a href="#" data-id="{!a.Id}" data-object="Account" target="_blank" class="viewLink btnX">Details</a>&nbsp; &nbsp; 
                    <a href="#" data-id="{!a.Id}" data-object="Account" target="_blank" class="editLink btnY">Edit</a>
                </td>
            </tr>
        </apex:repeat>
    </table>
    <script>
        var $j = jQuery.noConflict();
        var theme = '{!$User.UIThemeDisplayed}';                                  
        var $j = jQuery.noConflict();
        var lightningBase = '/lightning/'; // + type/Object/Id/action
        var classicBase = '/';
        var mobileBase = '/lightning/'; // + type/Object/Id/action 
        $j(document).on('ready', function(){
           switch(theme){
              case 'Theme4d':
                 console.log('Lightning Experience Detected');
                 $j('.notLightning').addClass('hide');
                 $j('.mobileOnly').addClass('hide');
                 $j('.classicOnly').addClass('hide');
                 $j('.onlyMobile').addClass('hide');
                 $j('.onlyClassic').addClass('hide');
                 break;
              case 'Theme4t':
                 console.log('Salesforce1 Detected');
                 $j('.notMobile').addClass('hide');
                 $j('.lightningOnly').addClass('hide');
                 $j('.classicOnly').addClass('hide');
                 $j('.onlyLightning').addClass('hide');
                 $j('.onlyClassic').addClass('hide');
                 $j('a').removeAttr('target');
                 break;
              case 'Theme3' || theme === 'Theme2':
                 console.log('Salesforce Classic Detected');
                 $j('.notClassic').addClass('hide');
                 $j('.lightningOnly').addClass('hide');
                 $j('.mobileOnly').addClass('hide');
                 $j('.onlyLightning').addClass('hide');
                 $j('.onlyMobile').addClass('hide');
           }
           bindViewLinks();
           bindEditLinks();  
       }
}
        
function bindViewLinks(){
    var $j = jQuery.noConflict();
    var link = '';
    var id = '';
    var type = '';
    var link = '';
    $j('.viewLink').each(function () {
        var thisEl = $j(this);
        id = thisEl.data('id');
        console.log(id);
        if (!!id && id !== '' && id !== 'home') {
            type = 'r/';
        }
        else {
            type = 'o/';
        }
        link = '';
        switch (theme) {
            case 'Theme4d':
                if (type == 'r/') {
                    link = lightningBase + type + thisEl.data('object') + '/' + thisEl.data('id') + '/view';
                }
                else if (type == 'o/') {
                    link = lightningBase + type + thisEl.data('object') + '/home';
                }
                break;
            case 'Theme4t':
                if (type == 'r/') {
                    link = mobileBase + type + thisEl.data('object') + '/' + thisEl.data('id') + '/view';
                }
                else if (type == 'o/') {
                    link = lightningBase + type + thisEl.data('object') + '/home';
                }
                $j('a').removeAttr('target');
                break;
            case 'Theme3' || theme === 'Theme2':
                link = classicBase + thisEl.data('id');
                break;
            default:
                link = classicBase + thisEl.data('id');
                break;
        }
        thisEl.prop('href', link);
    });
}
    
function bindEditLinks(){
    var $j = jQuery.noConflict();
    var link = '';
    var id = '';
    var type = '';
    $j('.editLink').each(function () {
        link = '';
        id = '';
        type = '';
        var thisEl = $j(this);
        id = thisEl.data('id');
        console.log(id);
        if (id && id !== '' && id !== 'home') {
            type = 'r/';
        }
        else {
            type = 'o/';
        }
        switch (theme) {
            case 'Theme4d':
                if (type == 'r/') {
                    link = lightningBase + type + thisEl.data('object') + '/' + thisEl.data('id') + '/edit';
                }
                else if (type == 'o/') {
                    link = lightningBase + type + thisEl.data('object') + '/home';
                }
                break;
            case 'Theme4t':
                if (type == 'r/') {
                    link = mobileBase + type + thisEl.data('object') + '/' + thisEl.data('id') + '/edit';
                }
                else if (type == 'o/') {
                    link = lightningBase + type + thisEl.data('object') + '/home';
                }
                $j('a').removeAttr('target');
                break;
            case 'Theme3' || theme === 'Theme2':
                link = classicBase + thisEl.data('id');
                break;
            default:
                link = classicBase + thisEl.data('id');
                break;
        }
        thisEl.prop('href', link);
    });
}
    </script>
</apex:page>                
                                
                            
Controller:
                                
public with sharing class LightningLogicController {
    list<account> liAcc;
    public LightningLogicController(){
        liAcc = [select id, name from account limit 20];
    }
   
    public list<account> getliAcc(){
        return liAcc;
    }
}
